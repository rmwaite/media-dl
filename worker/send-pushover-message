#!/usr/bin/env python
import argparse
import logging
import os
import urllib.parse
import urllib.request
from datetime import datetime


class ISO8601Formatter(logging.Formatter):
    def formatTime(self, record, datefmt=None):
        dt = datetime.fromtimestamp(record.created)
        local_dt = dt.astimezone()
        formatted_time = local_dt.isoformat(timespec="milliseconds")

        return formatted_time


stream_handler = logging.StreamHandler()
stream_handler.setLevel(logging.DEBUG)
stream_formatter = ISO8601Formatter("%(asctime)s [%(levelname)s] %(message)s")
stream_handler.setFormatter(stream_formatter)

logger = logging.getLogger(__name__)
logger.propagate = False
logger.setLevel(logging.DEBUG)
logger.addHandler(stream_handler)


class Pushover:
    """Minimal Pushover API client."""

    def __init__(self, user, token):
        self._user = user
        self._token = token

    def request(self, url, data, content_type=None):
        headers = {}
        if content_type:
            headers["Content-Type"] = content_type
        request = urllib.request.Request(
            url, data=urllib.parse.urlencode(data).encode("utf-8"), headers=headers
        )
        response = urllib.request.urlopen(request)
        return response.read().decode("utf-8")

    def send_message(self, device, title, message):
        url = "https://api.pushover.net/1/messages.json"
        data = {
            "user": self._user,
            "token": self._token,
            "message": message,
        }
        if title:
            data["title"] = title
        if device:
            data["device"] = device
        content_type = "application/x-www-form-urlencoded"
        response = self.request(url, data=data, content_type=content_type)
        return response


# def send_pushover_message(user: str, token: str, message: str, device: str) -> None:
#     url = "https://api.pushover.net/1/messages.json"

#     data = {"user": user, "token": token, "message": message, "device": device}

#     request = urllib.request.Request(
#         url, data=urllib.parse.urlencode(data).encode("utf-8")
#     )
#     with urllib.request.urlopen(request) as response:
#         response_data = response.read().decode("utf-8")
#         # return response_data


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--user", default=os.environ.get("PUSHOVER_USER_KEY"))
    parser.add_argument("--token", default=os.environ.get("PUSHOVER_APP_TOKEN"))
    parser.add_argument("--device", default=None)
    parser.add_argument("--title", default=None)
    parser.add_argument("--message")
    args = parser.parse_args()

    pushover = Pushover(args.user, args.token)

    pushover.send_message(args.device, args.title, args.message)

    # send_pushover_message(args.user, args.token, args.device, args.title, args.message)


if __name__ == "__main__":
    main()
